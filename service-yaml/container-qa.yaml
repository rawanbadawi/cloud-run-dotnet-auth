apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations: 
    run.googleapis.com/launch-stage: GA
    run.googleapis.com/ingress: internal-and-cloud-load-balancing 
  name: ${SERVICE_NAME}
  labels: 
    region: ${REGION}
    app_code: "3kv" 
    classification: "highly-confidential" 
    cost_id: "14203" 
    department_id: "12756" 
    project_id:  "it-ncinvdev"
    tco_id: "itg_inv" 
    app_environment: "qa"
    sc_group: "corp-infra-cloud-platform"
    app_instance: "snsvc0023718"
spec:
  template:
    metadata:      
      name: ${SERVICE_NAME}-${REVISION_TAG} 
      annotations:
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/vpc-access-egress: all-traffic
        autoscaling.knative.dev/minScale: '3'
        autoscaling.knative.dev/maxScale: '100'
        run.googleapis.com/vpc-access-connector: projects/hca-itg-shared-networks/locations/us-east4/connectors/idp-qa-conn-us-east4
   
        run.googleapis.com/container-dependencies: '{"${SERVICE_NAME}":["cloudsqlproxy-sidecar"]}' # not applicable to cloud run jobs
         
    spec:
      containerConcurrency: 80
      serviceAccountName: ${CLOUD_RUN_SA}
      containers:
      - name: ${SERVICE_NAME}
        image: ${CONTAINER_IMAGE}
        ports: 
        - name: http1
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          periodSeconds: 15
        env:
        - name: PROJECT_ID
          value: ${PROJECT_ID}

        - name: DB_HOST 
          value: localhost
        - name: DB_NAME 
          value: postgres     
        - name: DB_USER
          value: ${SERVICE_NAME}-sa@${PROJECT_ID}.iam
        - name: DB_PASS
          value: ""
        - name: DB_PORT
          value: "5432"
      - name: cloudsqlproxy-sidecar
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.0
        env: 
        - name: CSQL_PROXY_INSTANCE_CONNECTION_NAME
          valueFrom:
            secretKeyRef:
              name: 3KV_INSTANCE_CONNECTION_NAME
              key: latest
        - name: CSQL_PROXY_HEALTH_CHECK
          value: "true"
        - name: CSQL_PROXY_HTTP_PORT
          value: "9801"
        - name: CSQL_PROXY_HTTP_ADDRESS
          value: 0.0.0.0

        # Configure the proxy to exit gracefully when sent from a different container
        # file.
        - name: CSQL_PROXY_EXIT_ZERO_ON_SIGTERM
          value: "true"

        # Enable the admin api server (which only listens for local connections)
        # and enable the /quitquitquit endpoint. This allows other containers
        # to shut down the proxy gracefully when they are ready to exit.
        - name: CSQL_PROXY_QUITQUITQUIT
          value: "true"
        - name: CSQL_PROXY_ADMIN_PORT
          value: "9092"
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /startup
            port: 9801
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        # The /liveness probe returns OK as soon as the proxy application has
        # begun its startup process and continues to return OK until the
        # process stops.
        #
        # We recommend adding a liveness probe to the proxy sidecar container.
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /liveness
            port: 9801
          # The probe will be checked every 15 seconds.
          periodSeconds: 15
          # Number of times the probe is allowed to fail before the transition
          # from healthy to failure state.
          #
          # If periodSeconds = 60, 5 tries will result in five minutes of
          # checks. The proxy starts to refresh a certificate five minutes
          # before its expiration. If those five minutes lapse without a
          # successful refresh, the liveness probe will fail and the pod will be
          # restarted.
          successThreshold: 1
          # The probe will fail if it does not respond in 5 seconds
          timeoutSeconds: 5          
        args:
        - "--structured-logs"
        - "--port=5432"
        - "--auto-iam-authn"
        - "--private-ip"
        - "--lazy-refresh"       
 
  traffic: 
 
  - latestRevision: true
    percent: 100 
  